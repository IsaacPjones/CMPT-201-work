#include <stdint.h>
#include <stdio.h>
#include <unistd.h>
#include <unistd.h>
#include <string.h>

struct header {
  uint64_t size;
  struct header *next;
};



void print_out(char *format, void *data, size_t data_size) {
  char buf[BUF_SIZE];
  ssize_t len = snprintf(buf, BUF_SIZE, format,
                          data_size == sizeof(uint64_t) ? *(uint64_t *)data
                                    : *(void **)data);
  if (len < 0) {
    handle_error("snprintf");
  }
  write(STDOUT_FILENO, buf, len);
}

void increase_heap_size(location) {
  void *new_space = sbrk(256);
};

void initialize_block(p) {
  struct header* inn = 

}

int main() {
  void *first_break = sbrk(0); 
  if (first_break == (void *)-1) {
    perror("sbrk(0) failed");
    return 1;
  }
  void new_break = increase_heap_size(*first_break);
  initialize_block(first_block_pointer);
  initialize_block(second_block_pointer);
}
